// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppRouter should match with snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(AppRouter)>
    <AppRouter
      checking={false}
      renewToken={[Function]}
      uid={null}
    >
      <BrowserRouter>
        <Router
          history={
            Object {
              "action": "REPLACE",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "z5j5jr",
                "pathname": "/login",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <div
            className="router-wrapper"
          >
            <Switch>
              <PublicRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(Component)",
                    "type": [Function],
                  }
                }
                computedMatch={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/login",
                    "url": "/login",
                  }
                }
                exact={true}
                isAuthenticated={false}
                location={
                  Object {
                    "hash": "",
                    "key": "z5j5jr",
                    "pathname": "/login",
                    "search": "",
                    "state": undefined,
                  }
                }
                path="/login"
              >
                <Route
                  component={[Function]}
                  computedMatch={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/login",
                      "url": "/login",
                    }
                  }
                  exact={true}
                  location={
                    Object {
                      "hash": "",
                      "key": "z5j5jr",
                      "pathname": "/login",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  path="/login"
                >
                  <componentSwitch
                    history={
                      Object {
                        "action": "REPLACE",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "key": "z5j5jr",
                          "pathname": "/login",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "key": "z5j5jr",
                        "pathname": "/login",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/login",
                        "url": "/login",
                      }
                    }
                  >
                    <Connect(Component)
                      history={
                        Object {
                          "action": "REPLACE",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "z5j5jr",
                            "pathname": "/login",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "z5j5jr",
                          "pathname": "/login",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/login",
                          "url": "/login",
                        }
                      }
                    >
                      <Component
                        history={
                          Object {
                            "action": "REPLACE",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "z5j5jr",
                              "pathname": "/login",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "z5j5jr",
                            "pathname": "/login",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/login",
                            "url": "/login",
                          }
                        }
                        startLogin={[Function]}
                        startRegister={[Function]}
                      >
                        <div
                          className="container"
                        >
                          <div
                            className="row"
                          >
                            <div
                              className="login-container"
                            >
                              <div
                                className="col-md-6 login-form-1 h-75"
                              >
                                <h3>
                                  Login
                                </h3>
                                <form
                                  onSubmit={[Function]}
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="form-control"
                                      name="lEmail"
                                      onChange={[Function]}
                                      placeholder="Email"
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="form-control"
                                      name="lPassword"
                                      onChange={[Function]}
                                      placeholder="Password"
                                      type="password"
                                      value=""
                                    />
                                  </div>
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="btnSubmit"
                                      type="submit"
                                      value="Login"
                                    />
                                  </div>
                                </form>
                              </div>
                              <div
                                className="col-md-6 login-form-2 h-75"
                              >
                                <h3>
                                  Register
                                </h3>
                                <form
                                  onSubmit={[Function]}
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="form-control"
                                      name="rName"
                                      onChange={[Function]}
                                      placeholder="Name"
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="form-control"
                                      name="rEmail"
                                      onChange={[Function]}
                                      placeholder="Email"
                                      type="email"
                                      value=""
                                    />
                                  </div>
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="form-control"
                                      name="rPassword"
                                      onChange={[Function]}
                                      placeholder="Password"
                                      type="password"
                                      value=""
                                    />
                                  </div>
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="form-control"
                                      name="rConfirmPassword"
                                      onChange={[Function]}
                                      placeholder="Confirm your password"
                                      type="password"
                                      value=""
                                    />
                                  </div>
                                  <div
                                    className="form-group"
                                  >
                                    <input
                                      className="btnSubmit"
                                      type="submit"
                                      value="Register"
                                    />
                                  </div>
                                </form>
                              </div>
                            </div>
                          </div>
                        </div>
                      </Component>
                    </Connect(Component)>
                  </componentSwitch>
                </Route>
              </PublicRoute>
            </Switch>
          </div>
        </Router>
      </BrowserRouter>
    </AppRouter>
  </Connect(AppRouter)>
</Provider>
`;
